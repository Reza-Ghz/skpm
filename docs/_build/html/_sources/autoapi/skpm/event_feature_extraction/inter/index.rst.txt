:py:mod:`skpm.event_feature_extraction.inter`
=============================================

.. py:module:: skpm.event_feature_extraction.inter


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   skpm.event_feature_extraction.inter.WorkInProgress




.. py:class:: WorkInProgress(window_size='1D')


   Bases: :py:obj:`sklearn.base.TransformerMixin`, :py:obj:`sklearn.base.BaseEstimator`

   Work in progress (WIP) feature extractor.

   :param window_size: {str}, default='1D'
                       Frequency of the bins to count the number of cases (work) in progress. See https://pandas.pydata.org/pandas-docs/stable/user_guide/timeseries.html#offset-aliases

   :returns: WIP feature array of shape (n_samples, 1)
   :rtype: ndarray

   .. py:method:: get_feature_names_out()


   .. py:method:: fit(X: pandas.DataFrame, y=None)


   .. py:method:: transform(X: pandas.DataFrame)

      1. _grouped_wip counts the number of cases within each bin
      2. pd.cut creates a new dataframe to identify to which bin each event timestamp belongs
      3. from the bins dataframe we can map the _grouped_wip to get the number of active cases at each bin (time step)
      4. fill na since the pd.cut does not consider the last bin (it works with open interval, i.e. `[)`)



